#include<iostream>
#include<cstdio>
#include<math.h>

using namespace std;

typedef long long lld;

const int N = 110000;

int a[2*N], b[2*N];
int need[N];
int main(){
    int cas, n, r;
    lld vol;
    cin >> n >> vol;
    r = 4*n + 2;
    for (int i=0; i<n; ++i) {
        cin >> a[i];
        a[i+n] = a[i];
    }
    for (int i=0; i<n; ++i) {
        cin >> b[i];
        b[i+n] = b[i];
    }
    int s = 0;
    lld tank = 0;
    for (int i=0; i<2*n; ++i){
        tank += a[i];
        tank = min(tank, vol);
        tank -= b[i];
        if (tank < 0){
            tank = 0;
            s = i+1;
        }
    }
    lld ans;
    if (s >= n){
        ans = 0;
    }else {
        ans = 1;
        need[s+n] = 0;
        for (int i=1; i<n; ++i){
            int id = s+n-i;
            need[id] = max((long long int)0, need[id+1] + b[id] - min((long long int)a[id], vol));
            if (need[id] == 0) ans ++;
        }
    }
    cout << ans << endl;
    return 0;
}
